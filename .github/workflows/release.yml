# Release jobs

name: Release

on:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  release:
    permissions:
      contents: write  # for actions/create-release to create a release
    name: Create Release on Github
    runs-on: ubuntu-latest
    steps:
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: ${{ github.ref }}
        draft: true
        prerelease: true
    - name: Release URL on file
      run: echo "${{ steps.create_release.outputs.upload_url }}" > release_url.txt
    - name: Save Release URL File For Uploading Files
      uses: actions/upload-artifact@v3
      with:
        name: release_url
        path: release_url.txt

  upload:
    permissions:
      contents: write  # for actions/upload-release-asset to upload release asset
    name: Upload Binaries to release
    needs: [release]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        mode: [crazyradio2, crazyradio2-CRPA-emulation]

    steps:
    - name: Checkout Repo
      uses: actions/checkout@v3
      with:
        submodules: true

    - name: Build
      run: |
        if [ ${{ matrix.mode }} = 'crazyradio2' ]; then
          docker run --rm -v ${PWD}:/module bitcraze/builder ./tools/build/build
        else
          docker run --rm -v ${PWD}:/module bitcraze/builder ./tools/build/build-legacy
        fi

        cp build/zephyr/crazyradio2.uf2 ${{ matrix.mode }}.uf2
        cp build/zephyr/crazyradio2.hex ${{ matrix.mode }}.hex

    - name: Load Release URL File from release job
      uses: actions/download-artifact@v3
      with:
        name: release_url

    - name: Get Release File Name & Upload URL
      id: get_release_info
      run: |
        value=`cat release_url.txt`
        echo "upload_url=$value" >> $GITHUB_OUTPUT

    - name: Get the version
      id: get_release_version
      env:
        GITHUB_REF : ${{ github.ref }}
      run: echo "release_version=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_OUTPUT

    - name: Upload ${{ matrix.mode }} uf2
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release_info.outputs.upload_url }}
        asset_path: ${{ matrix.mode }}.uf2
        asset_name: ${{ matrix.mode }}-${{ steps.get_release_version.outputs.release_version }}.uf2
        asset_content_type: application/octet-stream

    - name: Upload ${{ matrix.mode }} hex
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release_info.outputs.upload_url }}
        asset_path: ${{ matrix.mode }}.hex
        asset_name: ${{ matrix.mode }}-${{ steps.get_release_version.outputs.release_version }}.hex
        asset_content_type: application/octet-stream